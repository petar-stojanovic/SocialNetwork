@model SocialNetwork.Models.ViewModels.Account.UserVM

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Facebook</title>
    @Styles.Render("~/Content/css")

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
</head>
<body>


    <div class="container">

        <div class="navbar navbar-inverse">
            <div class="container">

                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.Action("LoginPartial", "Account")</li>
                    </ul>
                </div>
            </div>
        </div>

        <h1 style="text-align: center; font-weight: bold; color: #1877f2;">Social Network</h1>

        <section class="vh-100" style="background-color: #eee;">
            <div class="container h-100">
                <div class="row d-flex justify-content-center align-items-center h-100">
                    <div class="col-lg-12 col-xl-11">
                        <div class="card text-black" style="border-radius: 25px;">
                            <div class="card-body p-md-5">
                                <div class="row justify-content-center">
                                    <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                        <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>


                                        @using (Html.BeginForm("CreateAccount", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @class = "mx-1 mx-md-4" }))
                                        {
                                            @Html.AntiForgeryToken()

                                            <div class="mx-1 mx-md-4">

                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="d-flex flex-row align-items-center mb-4">

                                                    <div class="form-outline flex-fill mb-0">
                                                        <label class="control-label" for="FirstName">First Name</label>

                                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>


                                                <div class="d-flex flex-row align-items-center mb-4">

                                                    <div class="form-outline flex-fill mb-0">
                                                        <label class="control-label" for="LastName">Last Name</label>

                                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>


                                                <div class="d-flex flex-row align-items-center mb-4">

                                                    <div class="form-outline flex-fill mb-0">
                                                        <label class="control-label" for="EmailAddress">Email Address</label>

                                                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>

                                                <div class="d-flex flex-row align-items-center mb-4">

                                                    <div class="form-outline flex-fill mb-0">
                                                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })

                                                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>

                                                <div class="d-flex flex-row align-items-center mb-4">

                                                    <div class="form-outline flex-fill mb-0">
                                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })

                                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>


                                                <div class="d-flex flex-row align-items-center mb-4">

                                                    <div class="form-outline flex-fill mb-0">
                                                        <label class="control-label" for="ImageUpload">Upload Image</label>

                                                        <input type="file" name="file" id="ImageUpload" class="form-control" />
                                                        <img id="imgPreview" src="#" />
                                                    </div>

                                                </div>


                                                <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                                                    <input type="submit" value="Register" class="btn btn-primary btn-lg" />
                                                </div>

                                                


                                            </div>

                                        }
                                    </div>
                                    <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">
                                        <img src="~/Content/Images/image_2022-09-14_145645055-removebg-preview.png" class="img-fluid" />
                                       

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")

    <script>
        $(document).ready(function () {

            //image preview
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("#imgPreview").attr("src", e.target.result)
                    }

                    reader.readAsDataURL(input.files[0]);

                }

            }

            $("#ImageUpload").change(function () {
                readURL(this);
            });


            $("form#loginform").submit(function (e) {
                e.preventDefault();

                var $this = $(this);

                $this.find(".ajaxdiv").removeClass("hide");

                var username = $("#Username").val();
                var password = $("#Password").val();
                var url = "/account/Login";


                $.post(url, {
                    username: username,
                    password: password
                }, function (data) {
                    var response = data.trim();

                    if (response == "ok") {
                        document.location.href = "/";
                    } else {
                        $this.find(".ajaxdiv").addClass("hide")
                        $("div.em").fadeIn("fast");
                        setTimeout(function () {
                            $("div.em").fadeOut("fast");
                        }, 2000)
                    }

                });


            });



        });
    </script>
</body>
</html>
